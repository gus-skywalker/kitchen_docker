version: "3.8"

services:
  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_LOG_DIR: /dev/null
      MONGO_INITDB_DATABASE: kitchen
    volumes:
      - /Users/gugadam/data/mongodb:/data/mongodb
      - "$PWD/mongo-entrypoint/:/docker-entrypoint-initdb.d/"
    networks:
      - web
    ports:
      - 27017:27017
    command: mongod

  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_BASICAUTH_USERNAME: user
      ME_CONFIG_BASICAUTH_PASSWORD: user
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017
    depends_on:
      - mongodb
    ports:
      - 8081:8081
    networks:
      - web

  redis:
    image: redis:latest
    restart: always
    volumes:
      - /Users/gugadam/data/redis:/data/redis
    ports:
    - 6379:6379
    command: redis-server

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    networks:
      - web

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: "quickstart-events"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ZOOKEEPER_TIMEOUT_MS: 36000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9092:9092
    networks:
      - web
networks:
  web:
    driver: bridge